"""Merge heads and add live tracking models

Revision ID: merge_heads_and_add_live_tracking
Revises: add_data_quality_monitoring_models, add_notification_table
Create Date: 2025-01-06 12:00:00.000000

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = 'merge_heads_and_add_live_tracking'
down_revision = ('add_data_quality_monitoring_models', 'add_notification_table')
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create live game tracker table
    op.create_table(
        'live_game_tracker',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('game_id', sa.String(), nullable=False, unique=True),
        sa.Column('game_date', sa.DateTime(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('last_update', sa.DateTime(), nullable=False),
        sa.Column('next_update', sa.DateTime(), nullable=False),
        sa.Column('update_frequency', sa.Integer(), nullable=False, server_default='300'),
        sa.Column('quarter', sa.Integer(), nullable=True),
        sa.Column('time_remaining', sa.String(), nullable=True),
        sa.Column('home_score', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('away_score', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default='true'),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['game_id'], ['game.id']),
    )

    # Create live player stats table
    op.create_table(
        'live_player_stats',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('game_id', sa.String(), nullable=False),
        sa.Column('player_id', sa.Integer(), nullable=False),
        sa.Column('minutes_played', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('points', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('rebounds', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('assists', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('steals', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('blocks', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('field_goals_made', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('field_goals_attempted', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('three_pointers_made', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('three_pointers_attempted', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('free_throws_made', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('free_throws_attempted', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('turnovers', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('personal_fouls', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('fantasy_points', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('last_update', sa.DateTime(), nullable=False),
        sa.Column('is_final', sa.Boolean(), nullable=False, server_default='false'),
        sa.ForeignKeyConstraint(['game_id'], ['game.id']),
        sa.ForeignKeyConstraint(['player_id'], ['player.id']),
        sa.UniqueConstraint('game_id', 'player_id', name='uq_live_stats_game_player'),
    )

    # Create API cache table
    op.create_table(
        'api_cache',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('cache_key', sa.String(), nullable=False, unique=True, index=True),
        sa.Column('data', sa.JSON(), nullable=False),
        sa.Column('expires_at', sa.DateTime(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('hit_count', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('last_accessed', sa.DateTime(), nullable=False),
        sa.Column('endpoint', sa.String(), nullable=True),
        sa.Column('size_bytes', sa.Integer(), nullable=False, server_default='0'),
    )

    # Create cache statistics table
    op.create_table(
        'cache_statistics',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('date', sa.Date(), nullable=False, unique=True),
        sa.Column('total_requests', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('cache_hits', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('cache_misses', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('api_calls_saved', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('average_response_time', sa.Float(), nullable=False, server_default='0.0'),
        sa.Column('endpoint_stats', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cache_statistics')
    op.drop_table('api_cache')
    op.drop_table('live_player_stats')
    op.drop_table('live_game_tracker')
    # ### end Alembic commands ###
